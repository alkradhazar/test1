<sunSpecModels v="1">
  <model id="64903" len="498" name="bsm_ocmf">
    <block len="372">
      <point id="Typ" offset="0" type="enum16">
        <symbol id="CURRENT">0</symbol>
        <symbol id="TURN_ON">1</symbol>
        <symbol id="TURN_OFF">2</symbol>
        <symbol id="START">3</symbol>
        <symbol id="END">4</symbol>
      </point>
      <point id="St" offset="1" type="enum16">
        <symbol id="VALID">0</symbol>
        <symbol id="INVALID">1</symbol>
        <symbol id="UPDATING">2</symbol>
        <symbol id="FAILED_GENERAL">3</symbol>
        <symbol id="FAILED_NOT_ENABLED">4</symbol>
        <symbol id="FAILED_FEEDBACK">5</symbol>
      </point>
      <point id="O" offset="2" type="string" len="496" />
    </block>
  </model>
  <strings id="64903" locale="en">
    <model>
      <label>BSM Signed OCMF Data</label>
      <description>
        An OCMF representation of a BSM Signed Snapshot (model ID 64901).
        Signed snapshots and their OCMF representations are matched by the
        'Typ' data point.
        The OCMF representation contains selected data from the underlying
        snapshot. For example, 'Meta1' is taken as identity information and the
        other metadata data points are omitted.
      </description>
      <notes>
        Use the underlying snapshot's 'St' data point for creating snapshot
        data.  Once the snapshot is valid, you could read its OCMF
        representation from here.
      </notes>
    </model>
    <point id="Typ">
      <label>Snapshot Type</label>
      <description>Which snapshot type is represented by this model instance</description>
      <symbol id="CURRENT">
        <label>Signed Current Snapshot</label>
        <description>
          Signed snapshot of the current meter data at the time of its
          creation
        </description>
        <notes>
          Creating this snapshot just collects and signs the data. No further
          action is taken.
        </notes>
      </symbol>
      <symbol id="TURN_ON">
        <label>Signed Turn-On Snapshot</label>
        <description>
          Signed snapshot created during executing the turn-on sequence for an
          external contactor
        </description>
        <notes>
          Creating this snapshot executes the turn-on sequence for an external
          contactor. Its data is taken with the contactor turned off.
        </notes>
      </symbol>
      <symbol id="TURN_OFF">
        <label>Signed Turn-Off Snapshot</label>
        <description>
          Signed snapshot created during the execution of the turn-off sequence
          for an external contactor
        </description>
        <notes>
          Creating this snapshot executes the turn-on sequence for an external
          contactor. Its data is taken after turning the contactor off.
        </notes>
      </symbol>
      <symbol id="START">
        <label>Signed Start Snapshot</label>
        <description>
          Signed snapshot marking the start of a charging process without
          executing the turn-on sequence for an external contactor.
        </description>
      </symbol>
      <symbol id="END">
        <label>Signed End Snapshot</label>
        <description>
          Signed snapshot marking the end of a charging process without
          executing the turn-off sequence for an external contactor
        </description>
      </symbol>
    </point>
    <point id="St">
      <label>Snapshot Status</label>
      <description>Status of this snapshot instance</description>
      <notes>
        Write to the underlying snapshot's data point 'St' to trigger an
        update. 'St' is read-only here.
      </notes>
      <symbol id="VALID">
        <label>Snapshot Data Valid</label>
        <description>The model instance contains valid signed data of a snapshot</description>
      </symbol>
      <symbol id="INVALID">
        <label>Snapshot Data Invalid</label>
        <description>
          Snapshot data is invalid. This is the case after powering on the
          meter.
        </description>
      </symbol>
      <symbol id="UPDATING">
        <label>Snapshot Data Gets Updated</label>
        <description>
          The snapshot gets currently updated. Snapshot data is invalid.
        </description>
        <notes>
          Write this value to the underlying snapshot's data point 'St' to
          trigger the creation of a new snapshot. Afterwards poll this data
          point until its value changes to a different symbol indicating the
          outcome of the update process.
        </notes>
      </symbol>
      <symbol id="FAILED_GENERAL">
        <label>Snapshot Creation Failed For Unspecified Reason</label>
        <description>
          Creating the snapshot failed due to an issue with rendering OCMF data
          for an unspecified reason (for example an internal error). Snapshot
          data is invalid.
        </description>
      </symbol>
      <symbol id="FAILED_NOT_ENABLED">
        <label>Snapshot Creation Failed Due To Missing Enable Signal</label>
        <description>
          Creating the snapshot failed due to a missing enable signal (DOE)
        </description>
        <notes>
          This could happen when attempting to create a turn-on snapshot.
        </notes>
      </symbol>
      <symbol id="FAILED_FEEDBACK">
        <label>Snapshot Creation Failed Due Missing/Wrong Contactor Feedback</label>
        <description>
          Creating the snapshot failed due to missing or wrong feedback from
          the external contactor (through DI).
        </description>
      </symbol>
    </point>
    <point id="O">
      <label>OCMF</label>
      <description>OCMF representation of the snapshot indicated by 'Typ'</description>
      <notes>
        See
        https://github.com/SAFE-eV/OCMF-Open-Charge-Metering-Format/blob/e1c25620533400405340cfddc0dc71574939f1c5/OCMF-de.md
        for more information about OCMF.
      </notes>
    </point>
  </strings>
</sunSpecModels>